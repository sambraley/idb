FORMAT: 1A
HOST: http://spacecowboys.me/api/v1/

# Space Cowboys

Space Cowboys is an API allowing users to get information about various celestial objects.
For all of these objects, you can retrieve the full collection of each or retrieve an indivpidual object by pid or name.


## Satellites [/satellites]

### Retrieve a Satellite by ID [GET /satellites/{pid}]

+ Parameters
    + pid: 1 (number, required) - pID of the Satellite in the form of an integer
    
+ Response 200 (application/json)

    + Attributes (Satellite)

    + Headers

            Location: /satellites/1

### Retrieve Collection of Satellites [GET /satellites{?results_per_page}{?page}]
+ Parameters
    + results_per_page (number, optional) - The maximum number of results to return per page.
        + Default: `9`
    + page (number, optional) - The number of the page to return
        + Default: `1`
        
+ Response 200 (application/json)

    + Attributes (Collection Response)
        + objects (array)
            + (Satellite)
            + (Satellite)
                + pid : 2
    
    + Headers
    
            Location: /satellites?results_per_page=9&page=1
            
### Filtering and Ordering Collections [GET /satellites{?q}]

+ Parameters
    + q : {"order_by":[{"field":"name","direction":"desc"}],"filters":[{"name":"name","op":"==","val":"SARAL"}]} - 
        A flask restless query string.
        + Valid Operators
            + `==`
            + `!=`
            + `<`
            + `>`
            + `<=`
            + `>=`
        + field and name refers to the model attribute to make the query on.
        + Valid directions
            + `desc`
            + `asc`
            
+ Response 200 (application/json)

    + Attributes (Collection Response)
        + objects (array)
            + (Satellite)
            


## Planets [/planets]

### Retrieve a Single Planet by ID [GET /planets/{pid}]

+ Parameters
    
    + pid: 1 (number, required) - The primary id of the planetoid

+ Response 200 (application/json)

    + Attributes (Planet)

    + Headers

            Location: /planets/1


### Retrieve Collection of Planets [GET /planets{?results_per_page}{?page}]

+ Parameters

    + results_per_page (number, optional) - The maximum number of results to return.
        + Default: `9`
    + page (number, optional) - The number of the page to return

+ Response 200 (application/json)
    + Attributes (Collection Response)
        + objects (array)
            + (Planet)
            + (Planet)
                + pid: 2
    + Headers
    
            Location: /planets?results_per_page=2&page=1


### Filtering and Ordering Collections [GET /planets{?q}]

+ Parameters
    + q: {"order_by":[{"field":"name","direction":"desc"}],"filters":[{"name":"name","op":"==","val":"Earth"}]} (string)- A flask restless query string
        + Valid Operators
            + `==`
            + `!=`
            + `<`
            + `>`
            + `<=`
            + `>=`
        + field and name refers to the model attribute to make the query on.
        + Valid directions
            + `desc`
            + `asc`
            
+ Response 200 (application/json)

    + Attributes (Collection Response)
        + objects (array)
            + (Planet)


## Stars [/stars]

### Retrieve a Single Star by ID [GET /stars/{pid}]

+ Parameters 

    + pid: 1 (number, required) - The primary id of the star

+ Response 200 (application/json)

    + Attributes (Star)
    
    + Headers
    
            Location: /stars/1


### Retrieve Collection of Stars [GET /stars{?results_per_page}{?page}]

+ Parameters

    + results_per_page (number, optional) - The maximum number of results to return.
        + Default: `9`
    + page (number, optional) - The number of the page to return

+ Response 200 (application/json)
    
    + Attributes (Collection Response)
        + objects (array)
            + (Star)
            + (Star)
                + pid : 1
    
    + Headers
    
            Location: /stars?results_per_page=2&page=1


### Filtering and Ordering Collections [GET /stars{?q}]

+ Parameters
    + q: `{"order_by":[{"field":"name","direction":"desc"}],"filters":[{"name":"name","op":"==","val":"Sun"}]}` - A flask restless query string
        + Valid Operators
            + `==`
            + `!=`
            + `<`
            + `>`
            + `<=`
            + `>=`
        + field and name refers to the model attribute to make the query on.
        + Valid directions
            + `desc`
            + `asc`
            
+ Response 200 (application/json)

    + Attributes (Collection Response)
        + objects (array)
            + (Star)


## Galaxy by ID [/galaxies]

### Retrieve a Single Galaxy by ID [GET /galaxies/{pid}]

+ Parameters 
    
    + pid: 1 (number, required) - The primary id of the galaxy

+ Response 200 (application/json)

    + Attributes (Galaxy)

    + Headers

            Location: /galaxies/1


### Retrieve Collections of Galaxies [GET /galaxies{?results_per_page}{?page}]

+ Parameters

    + results_per_page (number, optional) - The maximum number of results to return.
        + Default: `9`
    + page (number, optional) - The number of the page to return 

+ Response 200 (application/json)
    
    + Attributes (Collection Response)
        + objects (array)
            + (Galaxy)
            + (Galaxy)
                + pid : 2
    
    + Headers
    
            Location: /galaxies?results_per_page=2&page=1

### Filtering and Ordering Collections [GET /galaxies{?q}]

+ Parameters
    + q: `{"order_by":[{"field":"name","direction":"desc"}],"filters":[{"name":"name","op":"==","val":"Milky Way"}]}` - A flask restless query string
        + Valid Operators
            + `==`
            + `!=`
            + `<`
            + `>`
            + `<=`
            + `>=`
        + field and name refers to the model attribute to make the query on.
        + Valid directions
            + `desc`
            + `asc`
            
+ Response 200 (application/json)

    + Attributes (Collection Response)
        + objects (array)
            + (Galaxy)

## Full Text Searching [/search]

### Searching [GET /search{?q}{?results_per_page}{?page}]

+ Parameters
    + q : `Earth` (required) - A query string of the text to search
    + results_per_page : 10 (number, optional)
    + page : 1 (number, optional)

+ Response 200 (application/json)

    + Attributes (Collection Response)
        + objects (array)
            + (Satellite)
            + (Planet)
        
## Data Structures

### Satellite (object)
+ pid: 1 (number) - `The primary key`
+ name: SARAL (string) - `The name of the Satellite`
+ info_url: https://en.wikipedia.org/wiki/SARAL (string)- `A url to an outside page that contains more information`
+ year_launched: 2013 (number) - `The year the satellite was launched`
+ mission_type: Planetary Science (string) - `The purpose of the satellite`
+ agency: Indian Space Research Organization (string) - `The full name of the agency that owns or operates the satellite`
+ planet_pid: 299 (number) - `The pid of the planet the satellite orbits`
+ star_pid: 271 (number) - `The pid of the host star of the satellite`
+ galaxy_pid: 143 (number) - `The pid of the galaxy the satellite exists in`
+ image_pid: 1 (number) - `The pid of the image of the satellite`

### Planet (object)
+ pid: 1 (number) - `The primary key`
+ name: `HAT-P-36 b` (string) - `The name of the planet`
+ dec: 4.915352 (number) - `The declination of the planet in the ICRS J2000 coordinate system`
+ ra: 188.266255 (number) - `The right ascension of the planet in the ICRS J2000 coordinate system`
+ gravity: 0.0297185700606153 (number) - `The gravity of the planet expressed in multiples of Jupiter's gravity`
+ orbital_period: 1.327347 (number) - `The orbital period of the planet in Earth days`
+ diameter: 2.826 (number) - `The diameter of the planet expressed in multiples of Jupiter's diameter`
+ temperature: 1823 (number) - `The effective surface temperature of the planet in Kelvin`
+ mass: 1.85 (number) - `The mass of the planet expressed in multiples of Jupiter's mass`
+ star_pid: 230 (number) - `The pid of the star that the planet orbits`
+ galaxy_pid: 143 (number) - `The pid of the galaxy that the star resides in`
+ image_pid: 1 (number) - `The pid of the image of the planet`

### Star (object)
+ pid: 2 (number) - `The primary key`
+ name: `HAT P 33` (string) - `The name of the star`
+ dec: 26.426662 (number) - `The declination of the star in the ICRS J2000 coordinate system`
+ ra: 271.537705 (number) - `The right ascension of the the star in the ICRS J2000 coordiante system`
+ temperature: 6065 (number) - `The surface temperature of the star`
+ mass: 1.22 (number) - `The mass of the star in solar masses`
+ diameter: 3.366 (number) - `The diameter of the star expressed in multiples of the Sun's diameter`
+ galaxy_pid: 143 (number) - `The pid of the galaxy that the star exists in`
+ image_pid: 1 (number) - `The pid of the image of the star`

### Galaxy (object)
+ pid: 1 (number) - `The primary key`
+ name: `UGC 11693` (string) - `The name of the galaxy`
+ dec: 37.884811 (number) - `The declination of the galaxy in the ICRS J2000 coordinate system`
+ ra: 317.819183 (number) - `The right ascension of the galaxy in the ICRS J2000 coordinate system`
+ morph_type: Spiral (string) - `The morphological type of the galaxy such as Spiral, Irregular, etc.`
+ redshift: 0.027192 (number) - `The radial velocity of the galaxy as described by redshift`
+ size: 1.227 (number) - `The angular size in arcminutes of the major axis of the galaxy`
+ image_pid: 1 (number) - `The pid of the image of the galaxy`

### Collection Response (object)
+ num_results: 36 - `The total number of results that the query resulted in`
+ page : 1  - `The current page number`
+ total_pages: 18 - `The total number of pages the query resulted in`